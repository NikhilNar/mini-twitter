// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authpb/auth.proto

package authpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthToken struct {
	Token                map[string]int32 `protobuf:"bytes,1,rep,name=Token,proto3" json:"Token,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AuthToken) Reset()         { *m = AuthToken{} }
func (m *AuthToken) String() string { return proto.CompactTextString(m) }
func (*AuthToken) ProtoMessage()    {}
func (*AuthToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ce6d708f87792, []int{0}
}

func (m *AuthToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthToken.Unmarshal(m, b)
}
func (m *AuthToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthToken.Marshal(b, m, deterministic)
}
func (m *AuthToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthToken.Merge(m, src)
}
func (m *AuthToken) XXX_Size() int {
	return xxx_messageInfo_AuthToken.Size(m)
}
func (m *AuthToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthToken.DiscardUnknown(m)
}

var xxx_messageInfo_AuthToken proto.InternalMessageInfo

func (m *AuthToken) GetToken() map[string]int32 {
	if m != nil {
		return m.Token
	}
	return nil
}

type InitToken struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitToken) Reset()         { *m = InitToken{} }
func (m *InitToken) String() string { return proto.CompactTextString(m) }
func (*InitToken) ProtoMessage()    {}
func (*InitToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ce6d708f87792, []int{1}
}

func (m *InitToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitToken.Unmarshal(m, b)
}
func (m *InitToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitToken.Marshal(b, m, deterministic)
}
func (m *InitToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitToken.Merge(m, src)
}
func (m *InitToken) XXX_Size() int {
	return xxx_messageInfo_InitToken.Size(m)
}
func (m *InitToken) XXX_DiscardUnknown() {
	xxx_messageInfo_InitToken.DiscardUnknown(m)
}

var xxx_messageInfo_InitToken proto.InternalMessageInfo

type AuthTokenName struct {
	TokenName            string   `protobuf:"bytes,1,opt,name=TokenName,proto3" json:"TokenName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthTokenName) Reset()         { *m = AuthTokenName{} }
func (m *AuthTokenName) String() string { return proto.CompactTextString(m) }
func (*AuthTokenName) ProtoMessage()    {}
func (*AuthTokenName) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ce6d708f87792, []int{2}
}

func (m *AuthTokenName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthTokenName.Unmarshal(m, b)
}
func (m *AuthTokenName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthTokenName.Marshal(b, m, deterministic)
}
func (m *AuthTokenName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthTokenName.Merge(m, src)
}
func (m *AuthTokenName) XXX_Size() int {
	return xxx_messageInfo_AuthTokenName.Size(m)
}
func (m *AuthTokenName) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthTokenName.DiscardUnknown(m)
}

var xxx_messageInfo_AuthTokenName proto.InternalMessageInfo

func (m *AuthTokenName) GetTokenName() string {
	if m != nil {
		return m.TokenName
	}
	return ""
}

type AuthTokenValue struct {
	TokenValue           int32    `protobuf:"varint,1,opt,name=TokenValue,proto3" json:"TokenValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthTokenValue) Reset()         { *m = AuthTokenValue{} }
func (m *AuthTokenValue) String() string { return proto.CompactTextString(m) }
func (*AuthTokenValue) ProtoMessage()    {}
func (*AuthTokenValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ce6d708f87792, []int{3}
}

func (m *AuthTokenValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthTokenValue.Unmarshal(m, b)
}
func (m *AuthTokenValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthTokenValue.Marshal(b, m, deterministic)
}
func (m *AuthTokenValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthTokenValue.Merge(m, src)
}
func (m *AuthTokenValue) XXX_Size() int {
	return xxx_messageInfo_AuthTokenValue.Size(m)
}
func (m *AuthTokenValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthTokenValue.DiscardUnknown(m)
}

var xxx_messageInfo_AuthTokenValue proto.InternalMessageInfo

func (m *AuthTokenValue) GetTokenValue() int32 {
	if m != nil {
		return m.TokenValue
	}
	return 0
}

type UserId struct {
	User                 int32    `protobuf:"varint,1,opt,name=User,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ce6d708f87792, []int{4}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetUser() int32 {
	if m != nil {
		return m.User
	}
	return 0
}

type Status struct {
	ResponseStatus       bool     `protobuf:"varint,1,opt,name=ResponseStatus,proto3" json:"ResponseStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ce6d708f87792, []int{5}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetResponseStatus() bool {
	if m != nil {
		return m.ResponseStatus
	}
	return false
}

func init() {
	proto.RegisterType((*AuthToken)(nil), "authpb.AuthToken")
	proto.RegisterMapType((map[string]int32)(nil), "authpb.AuthToken.TokenEntry")
	proto.RegisterType((*InitToken)(nil), "authpb.InitToken")
	proto.RegisterType((*AuthTokenName)(nil), "authpb.AuthTokenName")
	proto.RegisterType((*AuthTokenValue)(nil), "authpb.AuthTokenValue")
	proto.RegisterType((*UserId)(nil), "authpb.UserId")
	proto.RegisterType((*Status)(nil), "authpb.Status")
}

func init() { proto.RegisterFile("authpb/auth.proto", fileDescriptor_e98ce6d708f87792) }

var fileDescriptor_e98ce6d708f87792 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x6b, 0xc2, 0x40,
	0x10, 0x85, 0x8d, 0x36, 0xc1, 0x8c, 0x28, 0x3a, 0xb4, 0x45, 0x44, 0x8a, 0xec, 0xa1, 0x78, 0x69,
	0x2a, 0x4a, 0x41, 0xda, 0x93, 0x07, 0x2b, 0x5e, 0x7a, 0x88, 0xb5, 0xf7, 0x58, 0x07, 0x14, 0xeb,
	0x46, 0x36, 0x1b, 0xc1, 0x6b, 0x7f, 0x79, 0xc9, 0x4e, 0x5c, 0x4b, 0x6d, 0x7b, 0x49, 0x66, 0x1e,
	0xdf, 0xbc, 0x37, 0xbb, 0x09, 0x34, 0xa2, 0x54, 0xaf, 0x76, 0x8b, 0xfb, 0xec, 0x15, 0xec, 0x54,
	0xac, 0x63, 0xf4, 0x58, 0x12, 0x07, 0xf0, 0x47, 0xa9, 0x5e, 0xbd, 0xc6, 0x1b, 0x92, 0xd8, 0x07,
	0xd7, 0x14, 0x4d, 0xa7, 0x53, 0xea, 0x56, 0xfa, 0xed, 0x80, 0xa1, 0xc0, 0x12, 0x81, 0x79, 0x8e,
	0xa5, 0x56, 0x87, 0x90, 0xd1, 0xd6, 0x10, 0xe0, 0x24, 0x62, 0x1d, 0x4a, 0x1b, 0x3a, 0x34, 0x9d,
	0x8e, 0xd3, 0xf5, 0xc3, 0xac, 0xc4, 0x4b, 0x70, 0xf7, 0xd1, 0x47, 0x4a, 0xcd, 0x62, 0xc7, 0xe9,
	0xba, 0x21, 0x37, 0x8f, 0xc5, 0xa1, 0x23, 0x2a, 0xe0, 0x4f, 0xe5, 0x5a, 0x9b, 0x69, 0x71, 0x07,
	0x55, 0x9b, 0xf2, 0x12, 0x6d, 0x09, 0xdb, 0xe0, 0xdb, 0x26, 0xf7, 0x3b, 0x09, 0xa2, 0x07, 0x35,
	0x8b, 0xbf, 0x65, 0x8e, 0x78, 0x93, 0xef, 0x61, 0x3a, 0x33, 0xe0, 0x86, 0xdf, 0x14, 0xd1, 0x06,
	0x6f, 0x9e, 0x90, 0x9a, 0x2e, 0x11, 0xe1, 0x22, 0xab, 0x72, 0xc6, 0xd4, 0xa2, 0x07, 0xde, 0x4c,
	0x47, 0x3a, 0x4d, 0xf0, 0x16, 0x6a, 0x21, 0x25, 0xbb, 0x58, 0x26, 0xc4, 0x8a, 0xe1, 0xca, 0xe1,
	0x0f, 0xb5, 0xff, 0x59, 0x84, 0xba, 0x5d, 0x61, 0x46, 0x6a, 0xbf, 0x7e, 0x27, 0x1c, 0x03, 0x4e,
	0x48, 0x73, 0xce, 0xb3, 0x8a, 0xb7, 0x7c, 0xad, 0x57, 0x67, 0xf7, 0x98, 0x9d, 0xa1, 0x75, 0x7d,
	0x26, 0xf3, 0xa6, 0x05, 0x1c, 0x40, 0x79, 0xb4, 0x5c, 0xf2, 0x70, 0xed, 0x48, 0xb1, 0x6b, 0xeb,
	0x77, 0x33, 0x51, 0xc0, 0x07, 0x80, 0xb9, 0x4c, 0x48, 0xff, 0x9b, 0x69, 0xdd, 0xf8, 0x14, 0xa2,
	0x80, 0x4f, 0x50, 0x9d, 0x90, 0x24, 0x15, 0x69, 0xe2, 0xc9, 0xc6, 0x11, 0xb1, 0x1f, 0xe7, 0xcf,
	0xcc, 0x85, 0x67, 0x7e, 0xa6, 0xc1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x9c, 0xe3, 0x75,
	0x61, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthTokenServiceClient is the client API for AuthTokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthTokenServiceClient interface {
	GetUserIdFromToken(ctx context.Context, in *AuthTokenName, opts ...grpc.CallOption) (*AuthTokenValue, error)
	AddToken(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*AuthTokenName, error)
	UnsetToken(ctx context.Context, in *AuthTokenName, opts ...grpc.CallOption) (*Status, error)
	GenerateToken(ctx context.Context, in *InitToken, opts ...grpc.CallOption) (*AuthTokenName, error)
}

type authTokenServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthTokenServiceClient(cc *grpc.ClientConn) AuthTokenServiceClient {
	return &authTokenServiceClient{cc}
}

func (c *authTokenServiceClient) GetUserIdFromToken(ctx context.Context, in *AuthTokenName, opts ...grpc.CallOption) (*AuthTokenValue, error) {
	out := new(AuthTokenValue)
	err := c.cc.Invoke(ctx, "/authpb.AuthTokenService/GetUserIdFromToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) AddToken(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*AuthTokenName, error) {
	out := new(AuthTokenName)
	err := c.cc.Invoke(ctx, "/authpb.AuthTokenService/AddToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) UnsetToken(ctx context.Context, in *AuthTokenName, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/authpb.AuthTokenService/UnsetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTokenServiceClient) GenerateToken(ctx context.Context, in *InitToken, opts ...grpc.CallOption) (*AuthTokenName, error) {
	out := new(AuthTokenName)
	err := c.cc.Invoke(ctx, "/authpb.AuthTokenService/GenerateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthTokenServiceServer is the server API for AuthTokenService service.
type AuthTokenServiceServer interface {
	GetUserIdFromToken(context.Context, *AuthTokenName) (*AuthTokenValue, error)
	AddToken(context.Context, *UserId) (*AuthTokenName, error)
	UnsetToken(context.Context, *AuthTokenName) (*Status, error)
	GenerateToken(context.Context, *InitToken) (*AuthTokenName, error)
}

func RegisterAuthTokenServiceServer(s *grpc.Server, srv AuthTokenServiceServer) {
	s.RegisterService(&_AuthTokenService_serviceDesc, srv)
}

func _AuthTokenService_GetUserIdFromToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthTokenName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).GetUserIdFromToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthTokenService/GetUserIdFromToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).GetUserIdFromToken(ctx, req.(*AuthTokenName))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_AddToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).AddToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthTokenService/AddToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).AddToken(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_UnsetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthTokenName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).UnsetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthTokenService/UnsetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).UnsetToken(ctx, req.(*AuthTokenName))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthTokenService_GenerateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthTokenServiceServer).GenerateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authpb.AuthTokenService/GenerateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthTokenServiceServer).GenerateToken(ctx, req.(*InitToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthTokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authpb.AuthTokenService",
	HandlerType: (*AuthTokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserIdFromToken",
			Handler:    _AuthTokenService_GetUserIdFromToken_Handler,
		},
		{
			MethodName: "AddToken",
			Handler:    _AuthTokenService_AddToken_Handler,
		},
		{
			MethodName: "UnsetToken",
			Handler:    _AuthTokenService_UnsetToken_Handler,
		},
		{
			MethodName: "GenerateToken",
			Handler:    _AuthTokenService_GenerateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authpb/auth.proto",
}
